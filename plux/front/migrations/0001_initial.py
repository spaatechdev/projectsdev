# Generated by Django 4.1.4 on 2022-12-22 07:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import front.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'cities',
                'db_table': 'cities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sortname', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'countries',
                'db_table': 'countries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemCtegory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'item_category',
                'db_table': 'item_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ItemMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=80)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('hsn_code', models.IntegerField()),
                ('gst_percentage', models.IntegerField()),
                ('deleted', models.BooleanField(default=0)),
                ('item_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.itemctegory')),
            ],
            options={
                'verbose_name_plural': 'item_master',
                'db_table': 'item_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OnTransitHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_number', models.CharField(blank=True, max_length=15, null=True)),
                ('transfer_date', models.DateField(blank=True, null=True)),
                ('status', models.SmallIntegerField(default=1)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'on_transit_header',
                'db_table': 'on_transit_header',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlyDimensionMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
                ('length_ft', models.DecimalField(decimal_places=2, max_digits=10)),
                ('breadth_ft', models.DecimalField(decimal_places=2, max_digits=10)),
                ('length_mt', models.DecimalField(decimal_places=2, max_digits=10)),
                ('breadth_mt', models.DecimalField(decimal_places=2, max_digits=10)),
                ('square_ft', models.DecimalField(decimal_places=2, max_digits=10)),
                ('square_mt', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'ply_dimension_master',
                'db_table': 'ply_dimension_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammend_no', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_order_no', models.CharField(default='PO-00000001', max_length=50)),
                ('purchase_order_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.SmallIntegerField(default=1)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'purchase_order_header',
                'db_table': 'purchase_order_header',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StandardTermMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'standard_term_master',
                'db_table': 'standard_term_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CountryState', to='front.countries')),
            ],
            options={
                'verbose_name_plural': 'states',
                'db_table': 'states',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoreMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('address_1', models.CharField(max_length=60)),
                ('address_2', models.CharField(blank=True, max_length=60, null=True)),
                ('pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'Invalid Pin Number')])),
                ('gst_no', models.CharField(blank=True, max_length=16, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=40, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=40, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('manager_name', models.CharField(blank=True, max_length=40, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CityStore', to='front.cities')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CountryStore', to='front.countries')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StateStore', to='front.states')),
            ],
            options={
                'verbose_name_plural': 'store_master',
                'db_table': 'store_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'transaction_types',
                'db_table': 'transaction_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UomMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=30)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name_plural': 'uom_master',
                'db_table': 'uom_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VendorMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('address_1', models.CharField(max_length=60)),
                ('address_2', models.CharField(blank=True, max_length=60, null=True)),
                ('pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'Invalid Pin Number')])),
                ('gst_no', models.CharField(blank=True, max_length=16, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=40, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=40, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CityVendor', to='front.cities')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CountryVendor', to='front.countries')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StateVendor', to='front.states')),
            ],
            options={
                'verbose_name_plural': 'vendor_master',
                'db_table': 'vendor_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoreTransactionHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_number', models.CharField(blank=True, max_length=15, null=True)),
                ('transaction_date', models.DateField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deleted', models.BooleanField(default=0)),
                ('on_transit_header', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.ontransitheader')),
                ('purchase_order_header', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.purchaseorderheader')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.storemaster')),
                ('transaction_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.transactiontype')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.vendormaster')),
            ],
            options={
                'verbose_name_plural': 'store_transaction_header',
                'db_table': 'store_transaction_header',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoreTransactionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StoreItem', to='front.itemmaster')),
                ('store_transaction_header', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='front.storetransactionheader')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.transactiontype')),
            ],
            options={
                'verbose_name_plural': 'store_transaction_details',
                'db_table': 'store_transaction_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoreItemMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_qty', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('on_hand_qty', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('closing_qty', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StoreItemItem', to='front.itemmaster')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StoreItemStore', to='front.storemaster')),
            ],
            options={
                'verbose_name_plural': 'store_item_master',
                'db_table': 'store_item_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderTerms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammend_no', models.IntegerField(default=0)),
                ('deleted', models.BooleanField(default=0)),
                ('terms', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PurchaseTerm', to='front.standardtermmaster')),
            ],
            options={
                'verbose_name_plural': 'purchase_order_terms',
                'db_table': 'purchase_order_terms',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='purchaseorderheader',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='front.vendormaster'),
        ),
        migrations.CreateModel(
            name='PurchaseOrderDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammend_no', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('delivered_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deleted', models.BooleanField(default=0)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PurchaseItem', to='front.itemmaster')),
                ('purchase_order_header', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='front.purchaseorderheader')),
            ],
            options={
                'verbose_name_plural': 'purchase_order_details',
                'db_table': 'purchase_order_details',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='ontransitheader',
            name='store_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TransitFromStore', to='front.storemaster'),
        ),
        migrations.AddField(
            model_name='ontransitheader',
            name='store_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TransitToStore', to='front.storemaster'),
        ),
        migrations.CreateModel(
            name='OnTransitDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivered_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TransitItem', to='front.itemmaster')),
                ('on_transit_header', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='front.ontransitheader')),
            ],
            options={
                'verbose_name_plural': 'on_transit_details',
                'db_table': 'on_transit_details',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='ply_dimension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PlyItem', to='front.plydimensionmaster'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='uom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UomItem', to='front.uommaster'),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=60)),
                ('address_1', models.CharField(max_length=60)),
                ('address_2', models.CharField(blank=True, max_length=60, null=True)),
                ('pin', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'Invalid Pin Number')])),
                ('gst_no', models.CharField(blank=True, max_length=16, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=40, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=40, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CityCustomer', to='front.cities')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='CountryCustomer', to='front.countries')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StateCustomer', to='front.states')),
            ],
            options={
                'verbose_name_plural': 'customer',
                'db_table': 'customer',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='cities',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='StateCity', to='front.states'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./_ only.', max_length=155, unique=True, verbose_name='email address')),
                ('pswd_token', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('manager', front.managers.UserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
